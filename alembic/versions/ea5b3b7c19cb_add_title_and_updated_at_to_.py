"""Add title and updated_at to conversations

Revision ID: ea5b3b7c19cb
Revises: 9705e7e6859f
Create Date: 2024-10-08 15:08:40.030377

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ea5b3b7c19cb'
down_revision: Union[str, None] = '9705e7e6859f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.add_column('conversations', sa.Column('title', sa.String(), nullable=True))
    op.add_column('conversations', sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('conversations', 'updated_at')
    op.drop_column('conversations', 'title')
    op.create_table('scheduled_events',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('event_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('summary', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('start', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('hangout_link', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='scheduled_events_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='scheduled_events_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('event_attendees',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('event_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['event_id'], ['scheduled_events.id'], name='event_attendees_event_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='event_attendees_pkey')
    )
    op.create_index('ix_event_attendees_id', 'event_attendees', ['id'], unique=False)
    op.create_table('refresh_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='refresh_tokens_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='refresh_tokens_pkey')
    )
    op.create_index('ix_refresh_tokens_token', 'refresh_tokens', ['token'], unique=True)
    op.create_index('ix_refresh_tokens_id', 'refresh_tokens', ['id'], unique=False)
    # ### end Alembic commands ###
